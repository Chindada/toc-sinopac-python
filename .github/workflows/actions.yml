name: Lint, Build, and Deployment
run-name: ${{ github.actor }} is running TOC SINOPAC PYTHON Actions ðŸš€

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  Lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.6"

      - name: Install Requirements
        run: |
          pip install --no-warn-script-location --no-cache-dir -r requirements.txt
          pip install --no-warn-script-location --no-cache-dir mypy-protobuf pylint-protobuf mypy pylint
          mypy --install-types --non-interactive ./src

      - name: Lint
        run: |
          export PYTHONPATH=$(pwd)/pb
          echo $PYTHONPATH
          export PYLINTHOME=$(pwd)
          echo $PYLINTHOME
          ./scripts/lint-code.sh

  Build:
    needs: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3.1.1
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/toc-sinopac-python:latest
          build-args: |
            "SSH_PRIVATE_KEY=${{ secrets.TIMHSU_KEY }}"

  Deployment:
    needs: Build
    runs-on: [self-hosted, Linux, X64]
    environment: production
    steps:
      - name: deploying
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.TRADER_HOST }}
          username: ${{ secrets.TRADER_USERNAME }}
          key: ${{ secrets.TRADER_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/toc-sinopac-python:latest
